{
  "name": "KnockoutJS Extensions",
  "tagline": "Collection of useful extensions for knockout observables & observable arrays.",
  "body": "Knockout JS Extensions\r\n======\r\n\r\nCollection of useful extensions for Knockout JS\r\n\r\nSubscrible Methods\r\n------\r\n#### subscribeChanged()\r\n```javascript\r\nvar myOsbv = ko.observable(\"\");\r\nmyObsv.subscribeChanged(function(newVal, oldVal) {\r\n    /* custom code */\r\n});\r\n```\r\n\r\nObservable Extensions\r\n------\r\n#### toggleable()\r\n```javascript\r\nvar myOsbv = ko.observable(\"\").toggleable();\r\n```\r\n```html\r\n<button data-bind=\"click: myObsv.toggle()\"></button>\r\n```\r\n#### sanitizeValue()\r\n```javascript\r\nvar myOsbv = ko.observable(\"\")..sanitizeValue(/w3schools/i, '-');\r\n```\r\n\r\nObservable Array Methods\r\n------\r\n#### pushIfNotExists()\r\n```javascript\r\nvar myOsbvArray = ko.observableArray([]);\r\nmyobsvArray.pushIfNotExists(someItem, function(item){ \r\n    /* some custom predicate code */ \r\n});\r\n```\r\n#### subscribeChanged()\r\n```javascript\r\nvar myOsbvArray = ko.observableArray([]);\r\nmyobsvArray.pushToggle(someItem, function(item){ \r\n    /* some custom predicate code */ \r\n});\r\n```\r\n#### subscribeArrayWithCallback()\r\n```javascript\r\nvar myOsbvArray = ko.observableArray([]);\r\nmyobsvArray.subscribeArrayWithCallback(\r\n    function(itemWithStatus){ \r\n        /* predicate code */ \r\n    }, \r\n    successCallback(match){ \r\n        /* callback code */ \r\n    }\r\n);\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}